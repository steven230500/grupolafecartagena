name: deploy
on:
  workflow_run:
    workflows: [ "docker-publish" ]
    types: [ completed ]
    branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: SSH into droplet and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          envs: GHCR_USER,GHCR_PAT,SERVER_PATH
          script: |
            set -euxo pipefail

            # defaults
            : "${SERVER_PATH:=/opt/grupo-la-fe}"

            # Docker / Compose
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
            fi
            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              COMPOSE="docker-compose"
            fi

            # Red externa para hablar con Caddy central
            docker network inspect infra_infra_network >/dev/null 2>&1 || docker network create infra_infra_network

            mkdir -p "$SERVER_PATH"
            cd "$SERVER_PATH"

            # Login a GHCR si la imagen es privada (PAT con 'read:packages')
            if [ -n "${GHCR_PAT:-}" ]; then
              echo "$GHCR_PAT" | docker login ghcr.io -u "${GHCR_USER:-${USER}}" --password-stdin
            fi

            # Pull & Up
            $COMPOSE -f docker-compose.prod.yml pull
            $COMPOSE -f docker-compose.prod.yml up -d --remove-orphans

            # Limpieza opcional
            docker image prune -f || true